[{"D:\\Projects\\Todoist\\todoist-clone\\src\\index.js":"1","D:\\Projects\\Todoist\\todoist-clone\\src\\App.js":"2","D:\\Projects\\Todoist\\todoist-clone\\src\\Todo List\\Todolist.js":"3","D:\\Projects\\Todoist\\todoist-clone\\src\\Todo List\\Todo\\Todo.js":"4","D:\\Projects\\Todoist\\todoist-clone\\src\\Todo List\\AddTodoPanel\\AddTodoPanel.js":"5"},{"size":232,"mtime":1614350120888,"results":"6","hashOfConfig":"7"},{"size":168,"mtime":1614350120880,"results":"8","hashOfConfig":"7"},{"size":2632,"mtime":1614688635518,"results":"9","hashOfConfig":"7"},{"size":1518,"mtime":1614695144994,"results":"10","hashOfConfig":"7"},{"size":2573,"mtime":1614686730097,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1oloh0m",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"D:\\Projects\\Todoist\\todoist-clone\\src\\index.js",[],["24","25"],"D:\\Projects\\Todoist\\todoist-clone\\src\\App.js",[],"D:\\Projects\\Todoist\\todoist-clone\\src\\Todo List\\Todolist.js",["26"],"import React, {useState} from 'react';\r\nimport Todo from './Todo/Todo';\r\nimport {AiOutlinePlus} from \"react-icons/ai\";\r\nimport {IconContext} from \"react-icons\";\r\nimport AddTodoPanel from './AddTodoPanel/AddTodoPanel';\r\nimport './Todolist.scss';\r\n\r\n\r\nconst Todolist = () => {\r\n    const [todos, setTodos] = useState([\r\n        {id: 3, priority: 4, done: false, text: \"Correct all Hard Coded link\"},\r\n        {id: 0, priority: 1, done: false, text: \"Wash the dishes\",},\r\n        {id: 2, priority: 3, done: false, text: \"Add new Layer\"},\r\n        {id: 1, priority: 2, done: false, text: \"Clean up the house\"}\r\n    ]);\r\n    const [addTaskOpen, setAddTaskOpen] = useState(false);\r\n\r\n    const sortedTodos = [...todos].sort((firstTodo, secondTodo) => (firstTodo.priority > secondTodo.priority) ? 1 : -1);    \r\n\r\n    const SetTodoDone = (id) =>\r\n    { \r\n        setTodos(todos.map(todo =>{ \r\n                if (todo.id === id)\r\n                    todo.done = true;\r\n                return todo;\r\n            })\r\n        );\r\n    }; \r\n\r\n    const AddTodo = (newTodo, priority) => setTodos([...todos, {id: GetNextID(), text: newTodo, priority: priority, done: false}]);\r\n\r\n    const GetNextID = () => {\r\n        let maxId = 0;\r\n\r\n        todos.map(todo => {\r\n            if (todo.id > maxId)\r\n            maxId = todo.id;\r\n        });\r\n\r\n        return maxId + 1;\r\n    };\r\n\r\n    return (\r\n        <div className=\"todolist_panel\">\r\n            <div className=\"todolist-container\">\r\n                <h3 className=\"project-name\">TODO List</h3>\r\n                {\r\n                    sortedTodos.filter(todo => todo.done === false).map(todo => (\r\n                        <Todo key={todo.id} id={todo.id} text={todo.text} priority={todo.priority} onDoneClick={SetTodoDone} />\r\n                    ))\r\n                }\r\n                {\r\n                    addTaskOpen\r\n                        ? <AddTodoPanel setAddTaskOpen={setAddTaskOpen} addTaskOpen={addTaskOpen} AddTodo={AddTodo}/>\r\n                        : <div className={\"add-task-label\"} onClick={() => setAddTaskOpen(!addTaskOpen)}>\r\n                            <div>\r\n                                <IconContext.Provider value={{color: \"#DE4C4A\", size: \"18px\"}}>\r\n                                    <div>\r\n                                        <AiOutlinePlus />\r\n                                    </div>\r\n                                </IconContext.Provider>\r\n                            </div>\r\n                            <span>Add task</span> \r\n                        </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todolist;","D:\\Projects\\Todoist\\todoist-clone\\src\\Todo List\\Todo\\Todo.js",["27"],"D:\\Projects\\Todoist\\todoist-clone\\src\\Todo List\\AddTodoPanel\\AddTodoPanel.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":35,"column":24,"nodeType":"34","messageId":"35","endLine":35,"endColumn":26},{"ruleId":"36","severity":1,"message":"37","line":30,"column":8,"nodeType":"38","endLine":30,"endColumn":10,"suggestions":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'priority'. Either include it or remove the dependency array.","ArrayExpression",["42"],"no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [priority]",{"range":"45","text":"46"},[991,993],"[priority]"]